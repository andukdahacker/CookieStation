{"ast":null,"code":"import { getType, getJars, createJar } from \"../actions\";\nimport { INIT_STATE } from \"../constants\";\n\nconst jarReducer = (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case getType(getJars.getJarsRequest):\n      return { ...state,\n        isLoading: true\n      };\n\n    case getType(getJars.getJarsSuccess):\n      return { ...state,\n        isLoading: false,\n        data: action.payload\n      };\n\n    case getType(getJars.getJarsFailure):\n      return { ...state,\n        isLoading: false\n      };\n\n    case getType(createJar.createJarRequest):\n      return { ...state,\n        data: [...state.jars.data, action.payload]\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default jarReducer;","map":{"version":3,"sources":["/Users/anduk/Desktop/react/cookiejar/client/src/redux/reducers/jarReducer.js"],"names":["getType","getJars","createJar","INIT_STATE","jarReducer","state","action","type","getJarsRequest","isLoading","getJarsSuccess","data","payload","getJarsFailure","createJarRequest","jars"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,OAAlB,EAA2BC,SAA3B,QAA4C,YAA5C;AACA,SAASC,UAAT,QAA2B,cAA3B;;AAEA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGF,UAAT,EAAqBG,MAArB,KAAgC;AACjD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,OAAO,CAACC,OAAO,CAACO,cAAT,CAAZ;AACE,aAAO,EACL,GAAGH,KADE;AAELI,QAAAA,SAAS,EAAE;AAFN,OAAP;;AAIF,SAAKT,OAAO,CAACC,OAAO,CAACS,cAAT,CAAZ;AACE,aAAO,EACL,GAAGL,KADE;AAELI,QAAAA,SAAS,EAAE,KAFN;AAGLE,QAAAA,IAAI,EAAEL,MAAM,CAACM;AAHR,OAAP;;AAKF,SAAKZ,OAAO,CAACC,OAAO,CAACY,cAAT,CAAZ;AACE,aAAO,EACL,GAAGR,KADE;AAELI,QAAAA,SAAS,EAAE;AAFN,OAAP;;AAIF,SAAKT,OAAO,CAACE,SAAS,CAACY,gBAAX,CAAZ;AACE,aAAO,EACL,GAAGT,KADE;AAELM,QAAAA,IAAI,EAAE,CAAC,GAAGN,KAAK,CAACU,IAAN,CAAWJ,IAAf,EAAqBL,MAAM,CAACM,OAA5B;AAFD,OAAP;;AAIF;AACE,aAAOP,KAAP;AAvBJ;AAyBD,CA1BD;;AA4BA,eAAeD,UAAf","sourcesContent":["import { getType, getJars, createJar } from \"../actions\";\nimport { INIT_STATE } from \"../constants\";\n\nconst jarReducer = (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case getType(getJars.getJarsRequest):\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case getType(getJars.getJarsSuccess):\n      return {\n        ...state,\n        isLoading: false,\n        data: action.payload,\n      };\n    case getType(getJars.getJarsFailure):\n      return {\n        ...state,\n        isLoading: false,\n      };\n    case getType(createJar.createJarRequest):\n      return {\n        ...state,\n        data: [...state.jars.data, action.payload],\n      };\n    default:\n      return state;\n  }\n};\n\nexport default jarReducer;\n"]},"metadata":{},"sourceType":"module"}