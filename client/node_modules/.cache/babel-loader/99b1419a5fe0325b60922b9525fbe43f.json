{"ast":null,"code":"var _jsxFileName = \"/Users/anduk/Desktop/react/cookiejar/client/src/Pages/ReadList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../styles/ReadList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ReadList() {\n  _s();\n\n  const [cookieData, setCookieData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const {\n    id\n  } = useParams();\n  const getCookieDataAPI = `http://localhost:5000/cookies/${id}`;\n  const deleteCookieDataAPI = `http://localhost:5000/shelf/cookies/delete/${id}`;\n  const history = useHistory();\n  useEffect(() => {\n    axios.get(getCookieDataAPI).then(response => {\n      setCookieData(response.data);\n      setIsLoading(false);\n    }).catch(err => {\n      console.log(err);\n      setError(true);\n    });\n  }, [getCookieDataAPI]);\n\n  const deleteCookie = () => {\n    setIsLoading(true);\n    axios.delete(deleteCookieDataAPI).then(res => {\n      setIsLoading(false);\n      history.push(`/shelf/${res.data.jarID}`);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainreadlist\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 10\n  }, this);\n}\n\n_s(ReadList, \"MW636Ot+0sFVL0aNpVfZx4lyNGg=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = ReadList;\nexport default ReadList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadList\");","map":{"version":3,"sources":["/Users/anduk/Desktop/react/cookiejar/client/src/Pages/ReadList.js"],"names":["React","useState","useEffect","useParams","useHistory","axios","ReadList","cookieData","setCookieData","isLoading","setIsLoading","error","setError","id","getCookieDataAPI","deleteCookieDataAPI","history","get","then","response","data","catch","err","console","log","deleteCookie","delete","res","push","jarID"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,kBAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,wBAAP;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM;AAAEY,IAAAA;AAAF,MAASV,SAAS,EAAxB;AACA,QAAMW,gBAAgB,GAAI,iCAAgCD,EAAG,EAA7D;AACA,QAAME,mBAAmB,GAAI,8CAA6CF,EAAG,EAA7E;AACA,QAAMG,OAAO,GAAGZ,UAAU,EAA1B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,KAAK,CACFY,GADH,CACOH,gBADP,EAEGI,IAFH,CAESC,QAAD,IAAc;AAClBX,MAAAA,aAAa,CAACW,QAAQ,CAACC,IAAV,CAAb;AACAV,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KALH,EAMGW,KANH,CAMUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAV,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KATH;AAUD,GAXQ,EAWN,CAACE,gBAAD,CAXM,CAAT;;AAaA,QAAMW,YAAY,GAAG,MAAM;AACzBf,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAL,IAAAA,KAAK,CACFqB,MADH,CACUX,mBADV,EAEGG,IAFH,CAESS,GAAD,IAAS;AACbjB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAM,MAAAA,OAAO,CAACY,IAAR,CAAc,UAASD,GAAG,CAACP,IAAJ,CAASS,KAAM,EAAtC;AACD,KALH,EAMGR,KANH,CAMUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KARH;AASD,GAXD;;AAaA,sBAAO;AAAK,IAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GApCQhB,Q;UAIQH,S,EAGCC,U;;;KAPTE,Q;AAsCT,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../styles/ReadList.css\";\n\nfunction ReadList() {\n  const [cookieData, setCookieData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const { id } = useParams();\n  const getCookieDataAPI = `http://localhost:5000/cookies/${id}`;\n  const deleteCookieDataAPI = `http://localhost:5000/shelf/cookies/delete/${id}`;\n  const history = useHistory();\n\n  useEffect(() => {\n    axios\n      .get(getCookieDataAPI)\n      .then((response) => {\n        setCookieData(response.data);\n        setIsLoading(false);\n      })\n      .catch((err) => {\n        console.log(err);\n        setError(true);\n      });\n  }, [getCookieDataAPI]);\n\n  const deleteCookie = () => {\n    setIsLoading(true);\n    axios\n      .delete(deleteCookieDataAPI)\n      .then((res) => {\n        setIsLoading(false);\n        history.push(`/shelf/${res.data.jarID}`);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return <div className=\"mainreadlist\"></div>;\n}\n\nexport default ReadList;\n"]},"metadata":{},"sourceType":"module"}