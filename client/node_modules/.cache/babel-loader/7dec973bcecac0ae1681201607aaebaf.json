{"ast":null,"code":"var _jsxFileName = \"/Users/anduk/Desktop/react/cookiejar/client/src/components/CreateJar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport TextError from \"../components/TextError\";\nimport bottlewnap from \"../image/bottlewnap.png\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../styles/Createjar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CreateJar() {\n  _s();\n\n  const initialValues = {\n    jarName: \"\"\n  };\n  const [isLoading, setIsLoading] = useState(false);\n\n  const onSubmit = async values => {\n    await axios.post(\"http://localhost:5000/shelf\", {\n      jarName: values.jarName\n    }).then(res => {\n      if (res.status !== 200) {\n        setIsLoading(true);\n      } else {\n        // redirect\n        setIsLoading(false);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const validationSchema = Yup.object({\n    jarName: Yup.string().required(\"Required\")\n  });\n  const history = useHistory();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: onSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"maincreatejar\",\n        children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"createjar-left\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: bottlewnap,\n              alt: \"bottlewnap\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"createjar-right\",\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              className: \"createjar-form\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"jarName\",\n                children: \"Name your Jar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"createjar-input\",\n                type: \"text\",\n                placeholder: \"name of your jar...\",\n                id: \"jarName\",\n                name: \"jarName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"jarName\",\n                component: TextError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: \"Next\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(CreateJar, \"WU+l1nrR9PNcAAJVFrwEnJQe9lA=\", false, function () {\n  return [useHistory];\n});\n\n_c = CreateJar;\nexport default CreateJar;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateJar\");","map":{"version":3,"sources":["/Users/anduk/Desktop/react/cookiejar/client/src/components/CreateJar.js"],"names":["React","useState","Formik","Form","Field","ErrorMessage","Yup","TextError","bottlewnap","useHistory","axios","CreateJar","initialValues","jarName","isLoading","setIsLoading","onSubmit","values","post","then","res","status","catch","err","console","log","validationSchema","object","string","required","history"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport TextError from \"../components/TextError\";\nimport bottlewnap from \"../image/bottlewnap.png\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../styles/Createjar.css\";\n\nfunction CreateJar() {\n  const initialValues = { jarName: \"\" };\n  const [isLoading, setIsLoading] = useState(false);\n\n  const onSubmit = async (values) => {\n    await axios\n      .post(\"http://localhost:5000/shelf\", { jarName: values.jarName })\n      .then((res) => {\n        if (res.status !== 200) {\n          setIsLoading(true);\n        } else {\n          // redirect\n          setIsLoading(false);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const validationSchema = Yup.object({\n    jarName: Yup.string().required(\"Required\"),\n  });\n  const history = useHistory();\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n      >\n        <div className=\"maincreatejar\">\n          {isLoading ? (\n            <div>Loading</div>\n          ) : (\n            <div>\n              <div className=\"createjar-left\">\n                <img src={bottlewnap} alt=\"bottlewnap\" />\n              </div>\n              <div className=\"createjar-right\">\n                <Form className=\"createjar-form\">\n                  <label htmlFor=\"jarName\">Name your Jar</label>\n                  <Field\n                    className=\"createjar-input\"\n                    type=\"text\"\n                    placeholder=\"name of your jar...\"\n                    id=\"jarName\"\n                    name=\"jarName\"\n                  />\n                  <ErrorMessage name=\"jarName\" component={TextError} />\n                  <button type=\"submit\">Next</button>\n                </Form>\n              </div>\n            </div>\n          )}\n        </div>\n      </Formik>\n    </>\n  );\n}\nexport default CreateJar;\n"]},"metadata":{},"sourceType":"module"}