{"ast":null,"code":"var _jsxFileName = \"/Users/anduk/Desktop/react/cookiejar/client/src/Pages/Login.js\";\nimport React from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport TextError from \"../components/TextError\";\nimport * as Yup from \"yup\";\nimport \"../styles/Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialValues = {\n  email: \"\",\n  password: \"\"\n};\nconst validationSchema = Yup.object({\n  email: Yup.string().email(\"Invalid email format\").required(\"Required\"),\n  password: Yup.string().required(\"Required\").matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/, \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\")\n});\n\nfunction Login() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainlogin\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/anduk/Desktop/react/cookiejar/client/src/Pages/Login.js"],"names":["React","Formik","Form","Field","ErrorMessage","TextError","Yup","initialValues","email","password","validationSchema","object","string","required","matches","Login"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,QAAkD,QAAlD;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAO,qBAAP;;;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,KAAK,EAAE,EADa;AAEpBC,EAAAA,QAAQ,EAAE;AAFU,CAAtB;AAKA,MAAMC,gBAAgB,GAAGJ,GAAG,CAACK,MAAJ,CAAW;AAClCH,EAAAA,KAAK,EAAEF,GAAG,CAACM,MAAJ,GAAaJ,KAAb,CAAmB,sBAAnB,EAA2CK,QAA3C,CAAoD,UAApD,CAD2B;AAElCJ,EAAAA,QAAQ,EAAEH,GAAG,CAACM,MAAJ,GACPC,QADO,CACE,UADF,EAEPC,OAFO,CAGN,gEAHM,EAIN,oGAJM;AAFwB,CAAX,CAAzB;;AAUA,SAASC,KAAT,GAAiB;AACf,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAOD;;KARQA,K;AAUT,eAAeA,KAAf","sourcesContent":["import React from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport TextError from \"../components/TextError\";\nimport * as Yup from \"yup\";\nimport \"../styles/Login.css\";\n\nconst initialValues = {\n  email: \"\",\n  password: \"\",\n};\n\nconst validationSchema = Yup.object({\n  email: Yup.string().email(\"Invalid email format\").required(\"Required\"),\n  password: Yup.string()\n    .required(\"Required\")\n    .matches(\n      /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\n      \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"\n    ),\n});\n\nfunction Login() {\n  return (\n    <>\n      <div className=\"mainlogin\">\n        <h1>Login</h1>\n      </div>\n    </>\n  );\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}