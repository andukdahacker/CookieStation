{"ast":null,"code":"var _jsxFileName = \"/Users/anduk/Desktop/react/cookiejar/client/src/Pages/SignUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport TextError from \"../components/TextError\";\nimport * as Yup from \"yup\";\nimport \"../styles/SignUp.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SignUp() {\n  _s();\n\n  const initialValues = {\n    email: \"\",\n    password: \"\",\n    passwordConfirmation: \"\"\n  };\n  const validationSchema = Yup.object({\n    email: Yup.string().email(\"Invalid email format\").required(\"Required\"),\n    password: Yup.string().required(\"Required\").matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/, \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"),\n    passwordConfirmation: Yup.string().oneOf([Yup.ref(\"password\"), null], \"Passwords must match\").required(\"Required\")\n  });\n  const createNewUserAPI = `http://localhost:5000/signup`;\n  const [isLoading, setIsLoading] = useState(false);\n\n  const onSubmit = values => {\n    setIsLoading(true);\n    const data = new FormData();\n    data.append(\"email\", values.email);\n    data.append(\"password\", values.password);\n    axios.post(createNewUserAPI, data).then(res => {\n      setIsLoading(false);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: onSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainsignup\",\n        children: [/*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"text\",\n            placeholder: \"your email\",\n            id: \"email\",\n            name: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"email\",\n            component: TextError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"text\",\n            placeholder: \"your password\",\n            id: \"password\",\n            name: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"password\",\n            component: TextError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"passwordConfirmation\",\n            children: \"Confirm your password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"text\",\n            placeholder: \"Re-enter your password\",\n            id: \"passwordConfirmation\",\n            name: \"passwordConfirmation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"passwordConfirmation\",\n            component: TextError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Loading\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 28\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Sign up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Sign up with Facebook\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Sign up in Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(SignUp, \"EmvgwIb3cHpoFpeP+WmEDbjx4y4=\");\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/Users/anduk/Desktop/react/cookiejar/client/src/Pages/SignUp.js"],"names":["React","useState","axios","Formik","Form","Field","ErrorMessage","TextError","Yup","SignUp","initialValues","email","password","passwordConfirmation","validationSchema","object","string","required","matches","oneOf","ref","createNewUserAPI","isLoading","setIsLoading","onSubmit","values","data","FormData","append","post","then","res","catch","err","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport TextError from \"../components/TextError\";\nimport * as Yup from \"yup\";\nimport \"../styles/SignUp.css\";\n\nfunction SignUp() {\n  const initialValues = {\n    email: \"\",\n    password: \"\",\n    passwordConfirmation: \"\",\n  };\n\n  const validationSchema = Yup.object({\n    email: Yup.string().email(\"Invalid email format\").required(\"Required\"),\n    password: Yup.string()\n      .required(\"Required\")\n      .matches(\n        /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\n        \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"\n      ),\n    passwordConfirmation: Yup.string()\n      .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\n      .required(\"Required\"),\n  });\n\n  const createNewUserAPI = `http://localhost:5000/signup`;\n  const [isLoading, setIsLoading] = useState(false);\n\n  const onSubmit = (values) => {\n    setIsLoading(true);\n    const data = new FormData();\n\n    data.append(\"email\", values.email);\n    data.append(\"password\", values.password);\n\n    axios\n      .post(createNewUserAPI, data)\n      .then((res) => {\n        setIsLoading(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n      >\n        <div className=\"mainsignup\">\n          <Form>\n            <label htmlFor=\"email\">Email</label>\n            <Field\n              type=\"text\"\n              placeholder=\"your email\"\n              id=\"email\"\n              name=\"email\"\n            />\n            <ErrorMessage name=\"email\" component={TextError} />\n            <label htmlFor=\"password\">Password</label>\n            <Field\n              type=\"text\"\n              placeholder=\"your password\"\n              id=\"password\"\n              name=\"password\"\n            />\n            <ErrorMessage name=\"password\" component={TextError} />\n            <label htmlFor=\"passwordConfirmation\">Confirm your password</label>\n            <Field\n              type=\"text\"\n              placeholder=\"Re-enter your password\"\n              id=\"passwordConfirmation\"\n              name=\"passwordConfirmation\"\n            />\n            <ErrorMessage name=\"passwordConfirmation\" component={TextError} />\n            <button type=\"submit\">\n              {isLoading ? <div>Loading</div> : <div>Sign up</div>}\n            </button>\n          </Form>\n          <button>Sign up with Facebook</button>\n          <button>Sign up in Google</button>\n        </div>\n      </Formik>\n    </>\n  );\n}\n\nexport default SignUp;\n"]},"metadata":{},"sourceType":"module"}