{"ast":null,"code":"var _jsxFileName = \"/Users/anduk/Desktop/react/cookiejar/client/src/Pages/ReadList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../styles/ReadList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ReadList() {\n  _s();\n\n  const [cookieData, setCookieData] = useState([]);\n  const [jarData, setJarData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const {\n    id\n  } = useParams();\n  const jarDataAPI = `http://localhost:5000/shelf/${id}`;\n  const history = useHistory();\n  useEffect(() => {\n    axios.get(jarDataAPI).then(response => {\n      setJarData(response.data);\n      setCookieData(response.data.cookies);\n      console.log(response);\n      setIsLoading(false);\n    }).catch(err => {\n      console.log(err);\n      setError(true);\n    });\n  }, [getCookieDataAPI]);\n\n  const deleteCookie = () => {\n    setIsLoading(true);\n    axios.delete(deleteCookieDataAPI).then(res => {\n      setIsLoading(false);\n      history.push(`/shelf/${res.data.jarID}`);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainreadlist\",\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: cookieData.filter(cookie => cookie.read === true).map((val, id) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: val.cookieTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: val.cookieImage,\n            alt: \"img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: val.cookieContent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 19\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ReadList, \"JmpLFBdAVv5cV6HV8gaBY77TIlw=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = ReadList;\nexport default ReadList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadList\");","map":{"version":3,"sources":["/Users/anduk/Desktop/react/cookiejar/client/src/Pages/ReadList.js"],"names":["React","useState","useEffect","useParams","useHistory","axios","ReadList","cookieData","setCookieData","jarData","setJarData","isLoading","setIsLoading","error","setError","id","jarDataAPI","history","get","then","response","data","cookies","console","log","catch","err","getCookieDataAPI","deleteCookie","delete","deleteCookieDataAPI","res","push","jarID","filter","cookie","read","map","val","cookieTitle","cookieImage","cookieContent"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,kBAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,wBAAP;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM;AAAEc,IAAAA;AAAF,MAASZ,SAAS,EAAxB;AACA,QAAMa,UAAU,GAAI,+BAA8BD,EAAG,EAArD;AAEA,QAAME,OAAO,GAAGb,UAAU,EAA1B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,KAAK,CACFa,GADH,CACOF,UADP,EAEGG,IAFH,CAESC,QAAD,IAAc;AAClBV,MAAAA,UAAU,CAACU,QAAQ,CAACC,IAAV,CAAV;AACAb,MAAAA,aAAa,CAACY,QAAQ,CAACC,IAAT,CAAcC,OAAf,CAAb;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACAR,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAPH,EAQGa,KARH,CAQUC,GAAD,IAAS;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACAZ,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KAXH;AAYD,GAbQ,EAaN,CAACa,gBAAD,CAbM,CAAT;;AAeA,QAAMC,YAAY,GAAG,MAAM;AACzBhB,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAP,IAAAA,KAAK,CACFwB,MADH,CACUC,mBADV,EAEGX,IAFH,CAESY,GAAD,IAAS;AACbnB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAK,MAAAA,OAAO,CAACe,IAAR,CAAc,UAASD,GAAG,CAACV,IAAJ,CAASY,KAAM,EAAtC;AACD,KALH,EAMGR,KANH,CAMUC,GAAD,IAAS;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD,KARH;AASD,GAXD;;AAaA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,cACGf,SAAS,gBACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADQ,GAENE,KAAK,gBACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADO,gBAGP;AAAA,gBACGN,UAAU,CACR2B,MADF,CACUC,MAAD,IAAYA,MAAM,CAACC,IAAP,KAAgB,IADrC,EAEEC,GAFF,CAEM,CAACC,GAAD,EAAMvB,EAAN,KAAa;AAChB,4BACE;AAAA,kCACE;AAAA,sBAAKuB,GAAG,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,GAAG,EAAED,GAAG,CAACE,WAAd;AAA2B,YAAA,GAAG,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,sBAAOF,GAAG,CAACG;AAAX;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA,WAAU1B,EAAV;AAAA;AAAA;AAAA;AAAA,gBADF;AAOD,OAVF;AADH;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GA7DQT,Q;UAKQH,S,EAGCC,U;;;KARTE,Q;AA+DT,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../styles/ReadList.css\";\n\nfunction ReadList() {\n  const [cookieData, setCookieData] = useState([]);\n  const [jarData, setJarData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const { id } = useParams();\n  const jarDataAPI = `http://localhost:5000/shelf/${id}`;\n\n  const history = useHistory();\n\n  useEffect(() => {\n    axios\n      .get(jarDataAPI)\n      .then((response) => {\n        setJarData(response.data);\n        setCookieData(response.data.cookies);\n        console.log(response);\n        setIsLoading(false);\n      })\n      .catch((err) => {\n        console.log(err);\n        setError(true);\n      });\n  }, [getCookieDataAPI]);\n\n  const deleteCookie = () => {\n    setIsLoading(true);\n    axios\n      .delete(deleteCookieDataAPI)\n      .then((res) => {\n        setIsLoading(false);\n        history.push(`/shelf/${res.data.jarID}`);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <div className=\"mainreadlist\">\n      {isLoading ? (\n        <div>Loading...</div>\n      ) : error ? (\n        <div>Error</div>\n      ) : (\n        <div>\n          {cookieData\n            .filter((cookie) => cookie.read === true)\n            .map((val, id) => {\n              return (\n                <div key={id}>\n                  <h3>{val.cookieTitle}</h3>\n                  <img src={val.cookieImage} alt=\"img\" />\n                  <span>{val.cookieContent}</span>\n                </div>\n              );\n            })}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default ReadList;\n"]},"metadata":{},"sourceType":"module"}