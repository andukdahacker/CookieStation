{"ast":null,"code":"var _jsxFileName = \"/Users/anduk/Desktop/react/cookiejar/client/src/Pages/Shelf.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"../styles/Shelf.css\";\nimport Modal from \"react-modal\";\nimport CreateJar from \"../components/CreateJar\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nModal.setAppElement(\"#root\");\n\nfunction Shelf() {\n  _s();\n\n  const [jarForm, setJarForm] = useState(false);\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const URL = \"http://localhost:5000/shelf\";\n  useEffect(() => {\n    axios.get(URL).then(response => {\n      setData(response.data);\n      setIsLoading(false);\n    }).catch(err => {\n      console.log(err);\n      setError(true);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainshelf\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setJarForm(true),\n        children: \"Create jar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: jarForm,\n        onRequestClose: () => setJarForm(false),\n        children: [/*#__PURE__*/_jsxDEV(CreateJar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setJarForm(false),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Error...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this) : data.map((val, id) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/shelf/${val._id}`,\n            children: val.jarName\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Shelf, \"twv7tk3sedTn1WJaCRlkYXYNNsM=\");\n\n_c = Shelf;\nexport default Shelf;\n\nvar _c;\n\n$RefreshReg$(_c, \"Shelf\");","map":{"version":3,"sources":["/Users/anduk/Desktop/react/cookiejar/client/src/Pages/Shelf.js"],"names":["React","useState","useEffect","Modal","CreateJar","axios","Link","setAppElement","Shelf","jarForm","setJarForm","data","setData","isLoading","setIsLoading","error","setError","URL","get","then","response","catch","err","console","log","map","val","id","_id","jarName"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,qBAAP;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAEAH,KAAK,CAACI,aAAN,CAAoB,OAApB;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACf,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAMgB,GAAG,GAAG,6BAAZ;AACAf,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,KAAK,CACFa,GADH,CACOD,GADP,EAEGE,IAFH,CAESC,QAAD,IAAc;AAClBR,MAAAA,OAAO,CAACQ,QAAQ,CAACT,IAAV,CAAP;AACAG,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KALH,EAMGO,KANH,CAMUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAN,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KATH;AAUD,GAXQ,EAWN,EAXM,CAAT;AAaA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAE,MAAMN,UAAU,CAAC,IAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,MAAM,EAAED,OAAf;AAAwB,QAAA,cAAc,EAAE,MAAMC,UAAU,CAAC,KAAD,CAAxD;AAAA,gCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,OAAO,EAAE,MAAMA,UAAU,CAAC,KAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAMGG,SAAS,gBACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADQ,GAENE,KAAK,gBACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADO,GAGPJ,IAAI,CAACc,GAAL,CAAS,CAACC,GAAD,EAAMC,EAAN,KAAa;AACpB,4BACE;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,UAASD,GAAG,CAACE,GAAI,EAA5B;AAAA,sBACGF,GAAG,CAACG;AADP,aAAoCF,EAApC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF;AAOD,OARD,CAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA0BD;;GA7CQnB,K;;KAAAA,K;AA+CT,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../styles/Shelf.css\";\nimport Modal from \"react-modal\";\nimport CreateJar from \"../components/CreateJar\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nModal.setAppElement(\"#root\");\n\nfunction Shelf() {\n  const [jarForm, setJarForm] = useState(false);\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const URL = \"http://localhost:5000/shelf\";\n  useEffect(() => {\n    axios\n      .get(URL)\n      .then((response) => {\n        setData(response.data);\n        setIsLoading(false);\n      })\n      .catch((err) => {\n        console.log(err);\n        setError(true);\n      });\n  }, []);\n\n  return (\n    <>\n      <div className=\"mainshelf\">\n        <button onClick={() => setJarForm(true)}>Create jar</button>\n        <Modal isOpen={jarForm} onRequestClose={() => setJarForm(false)}>\n          <CreateJar />\n          <button onClick={() => setJarForm(false)}>X</button>\n        </Modal>\n        {isLoading ? (\n          <div>Loading...</div>\n        ) : error ? (\n          <div>Error...</div>\n        ) : (\n          data.map((val, id) => {\n            return (\n              <div>\n                <Link to={`/shelf/${val._id}`} key={id}>\n                  {val.jarName}\n                </Link>\n              </div>\n            );\n          })\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default Shelf;\n"]},"metadata":{},"sourceType":"module"}